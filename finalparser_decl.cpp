/*
	
	Sree Harsha K - 2018A7PS0308H
	Saketh - 2018A7PS0287H
	Aditya Bejjanki - 2018A7PS0282H
	Duggina Charan  - 2018A7PS0486H
	Language- rarezip
*/

#include <bits/stdc++.h>
using namespace std;

string rules[300];
int parse_table[100][100];
map<string,int> nt_order,t_order;

class token
{
	public:
	int id;
	string type;
	token(string type)
	{
		//this->name = name;
		this->type = type;
		id = t_order[this->type];
	} 
};
vector <token> tokens;
//Function to get the set of rules from a text file and store in an array of strings
void populate_rules()
{
	string bf;
	ifstream f("ourrules.txt");
	int i = 1;
	while(getline(f,bf))
	{
		//cout<<bf<<endl;
		rules[i++] = bf;
	}
	f.close();
}
//Function to obtain parse table which was drawn by hand

void populate_table()
{
	//int parse_table2[15][27] = {{1,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,35},{2,36,36,36,36,3,2,36,2,2,36,36,2,36,2,36,36,36,36,36,36,36,36,36,36,36,36},{7,36,36,36,36,35,4,36,7,7,36,36,5,36,6,36,36,36,36,36,36,36,36,36,36,36,36},{8,36,36,36,36,35,35,36,9,10,36,36,35,36,35,36,36,36,36,36,36,36,36,36,36,36,36},{36,36,36,36,36,36,36,11,36,36,12,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36},{35,36,36,36,36,35,13,36,35,35,36,36,35,36,35,36,36,36,36,36,36,36,36,36,36,36,36},{35,36,36,36,36,35,35,36,35,35,36,36,14,36,35,36,36,36,36,36,36,36,36,36,36,36,36},{15,36,36,36,36,15,15,36,15,15,36,36,15,16,15,36,36,36,36,36,36,36,36,36,36,36,36},{35,36,36,36,36,35,35,36,35,35,36,36,35,36,17,36,36,36,36,36,36,36,36,36,36,36,36},{36,36,18,35,36,36,18,36,36,36,36,36,36,36,36,19,36,36,36,36,36,36,36,36,18,18,36},{36,36,35,36,36,36,35,36,36,36,36,36,36,36,36,36,20,21,22,36,36,36,36,36,35,35,36},{36,36,24,35,36,36,23,35,36,36,36,36,36,36,36,36,35,35,35,36,36,36,36,36,23,23,36},{36,36,36,25,36,36,36,25,36,36,36,36,36,36,36,36,25,25,25,26,27,28,29,30,36,36,36},{36,36,36,35,36,36,31,35,36,36,36,36,36,36,36,36,35,35,35,35,35,35,35,35,32,33,36},{36,36,36,34,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36}};
	//int parse_table2[16][30] = {{1,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,2,38,38,38,39,38,39,39,39,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,39,4,3,3,39,3,39,39,39,3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,38,5,7,39,6,39,39,39,8,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{9,39,39,39,39,39,39,39,39,39,39,39,39,39,9,9,9,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,39,10,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{11,39,39,39,39,39,11,39,39,39,39,39,39,39,11,39,39,39,39,39,39,39,39,39,39,39,39,39,11,39},{39,39,39,38,38,38,39,13,39,39,39,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,38,38,38,39,38,39,39,39,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,16,16,16,39,16,39,39,39,16,15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{17,39,39,39,39,39,17,39,39,39,39,39,39,39,17,39,39,39,39,39,39,39,39,39,39,39,39,39,17,39},{18,39,39,39,39,39,38,39,39,39,39,39,39,39,19,20,21,39,39,39,39,39,39,39,39,39,39,39,39,39},{38,39,39,39,39,39,38,39,39,39,39,39,39,39,38,39,39,22,23,24,25,26,39,39,39,39,39,39,38,39},{39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,27,28,29,30,31,32,39,39},{34,39,39,39,39,39,33,39,39,39,39,39,39,38,34,39,39,38,38,38,38,38,39,39,39,39,39,39,35,39},{36,39,39,39,39,39,39,39,39,39,39,39,39,38,37,39,39,38,38,38,38,38,39,39,39,39,39,39,39,39}};
	//int parse_table2[16][30] = {{1,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,39,39,2,38,38,38,39,38,39,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,39,39,39,4,3,3,39,3,39,3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,38,5,7,39,6,39,8,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{9,39,39,39,39,39,39,39,39,39,39,39,39,39,9,9,9,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,39,39,39,10,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{11,39,39,39,39,39,39,39,11,39,39,39,39,39,11,39,39,39,39,39,39,39,39,39,39,39,39,39,11,39},{39,39,39,39,39,38,38,38,39,13,39,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,38,38,38,39,38,39,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,16,16,16,39,16,39,16,15,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{17,39,39,39,39,39,39,39,17,39,39,39,39,39,17,39,39,39,39,39,39,39,39,39,39,39,39,39,17,39},{18,39,39,39,39,39,39,39,38,39,39,39,39,39,19,20,21,39,39,39,39,39,39,39,39,39,39,39,39,39},{38,39,39,39,39,39,39,39,38,39,39,39,39,39,38,39,39,22,23,24,25,26,39,39,39,39,39,39,38,39},{39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,27,28,29,30,31,32,39,39},{34,39,39,39,39,39,39,39,33,39,39,39,39,38,34,39,39,38,38,38,38,38,39,39,39,39,39,39,35,39},{36,39,39,39,39,39,39,39,39,39,39,39,39,38,37,39,39,38,38,38,38,38,39,39,39,39,39,39,39,39}};
	
	//int parse_table2[16][29] = {{1,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,39,39,2,38,38,38,39,39,39,39,38,38,38,39,39,39,39,39,39,39,39,39,39,39,39,39,38},{39,39,39,39,39,4,3,3,39,39,39,39,3,3,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,38,5,7,39,39,39,39,6,8,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{9,39,39,39,39,39,39,39,10,11,12,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,39,39,39,39,39,39,13,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{14,39,39,39,39,39,39,39,14,39,39,14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,14,39},{39,39,39,39,39,38,38,38,39,39,39,39,16,38,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,38,38,38,39,39,39,39,38,17,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{39,39,39,39,39,19,19,19,39,39,39,39,19,19,18,39,39,39,39,39,39,39,39,39,39,39,39,39,39},{20,39,39,38,39,39,39,39,20,39,39,20,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,20,39},{21,39,39,39,39,39,39,39,21,39,39,21,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,21,39},{38,39,39,39,39,39,39,39,38,39,39,38,39,39,39,39,22,23,24,25,26,39,39,39,39,39,39,38,39},{38,39,39,39,39,39,39,39,38,39,39,38,39,39,39,39,39,39,39,39,39,27,28,29,30,31,32,38,39},{34,39,39,38,39,39,39,39,34,39,39,33,39,39,39,38,38,38,38,38,38,38,38,38,38,38,38,35,39},{36,39,39,38,39,39,39,39,37,39,39,39,39,39,39,38,38,38,38,38,38,38,38,38,38,38,38,39,39}};
	
   // int parse_table2[16][29] = {{1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,37},{37,38,38,38,2,37,38,37,37,37,37,38,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,37},{3,38,38,38,38,4,38,3,3,3,3,38,3,3,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{5,38,38,38,38,37,38,7,5,5,5,38,6,8,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{9,38,38,38,38,38,37,38,10,11,12,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{38,38,38,38,38,38,37,38,38,38,38,13,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{14,38,38,38,38,38,15,38,14,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,14,38},{37,38,38,38,38,37,38,37,37,37,37,38,16,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{37,38,38,38,38,37,38,37,37,37,37,38,37,17,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{19,38,38,38,38,19,38,19,19,19,19,38,19,19,18,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{20,38,38,37,38,38,38,38,20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,20,38},{21,38,38,38,38,38,38,38,21,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,21,38},{37,38,38,38,38,38,38,38,37,38,38,38,38,38,38,38,22,23,24,25,26,38,38,38,38,38,38,37,38},{37,38,38,38,38,38,38,38,37,38,38,38,38,38,38,38,38,38,38,38,38,27,28,29,30,31,32,37,38},{33,38,38,37,38,38,37,38,33,38,38,38,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,34,38},{35,38,38,37,38,38,37,38,36,38,38,38,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,38,38}};
	
	
	
//// int parse_table2[16][28] = {{1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,37},{37,38,38,38,2,37,37,37,37,38,38,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,37,37},{3,38,38,38,38,4,3,3,3,38,38,3,3,38,38,38,38,38,38,38,38,38,38,38,38,38,3,38},{7,38,38,38,38,37,7,5,5,38,38,6,8,38,38,38,38,38,38,38,38,38,38,38,38,38,7,38},{9,38,38,38,38,37,10,11,12,38,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,37,38},{37,38,38,38,38,37,37,37,37,13,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,37,38},{14,38,38,38,38,38,14,38,38,38,15,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,14,38},{37,38,38,38,38,37,37,37,37,38,38,16,37,38,38,38,38,38,38,38,38,38,38,38,38,38,37,38},{37,38,38,38,38,37,37,37,37,38,38,37,17,38,38,38,38,38,38,38,38,38,38,38,38,38,37,38},{19,38,38,38,38,19,19,19,19,38,38,19,19,18,38,38,38,38,38,38,38,38,38,38,38,38,19,38},{20,38,38,37,38,38,20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,20,38},{21,38,38,38,38,37,21,37,37,38,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,21,38},{37,38,38,38,38,38,37,38,38,38,38,38,38,38,38,22,23,24,25,26,38,38,38,38,38,38,37,38},{37,38,38,38,38,38,37,38,38,38,38,38,38,38,38,38,38,38,38,38,27,28,29,30,31,32,37,38},{33,38,38,37,38,38,33,38,38,38,37,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,34,38},{35,38,38,37,38,38,36,38,38,38,37,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,38,38}};
	
	
///////	int parse_table2[16][28] = {{1,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,37},{37,38,38,38,2,37,37,37,37,38,38,37,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,37},{3,38,38,38,3,4,3,3,3,38,38,3,3,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{5,38,38,38,7,37,5,5,5,38,38,6,8,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{9,38,38,38,37,37,10,11,12,38,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{37,38,38,38,37,37,37,37,37,13,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{14,38,38,38,38,38,14,38,38,38,15,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,14,38},{37,38,38,38,37,37,37,37,37,38,38,16,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{37,38,38,38,37,37,37,37,37,38,38,37,17,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{19,38,38,38,19,19,19,19,19,38,38,19,19,18,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{20,38,38,37,38,38,20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,20,38},{37,38,38,38,21,37,37,37,37,38,38,37,37,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38},{37,38,38,38,38,38,37,38,38,38,38,38,38,38,38,22,23,24,25,26,38,38,38,38,38,38,37,38},{37,38,38,38,38,38,37,38,38,38,38,38,38,38,38,38,38,38,38,38,27,28,29,30,31,32,37,38},{33,38,38,37,38,38,33,38,38,38,37,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,34,38},{35,38,38,37,38,38,36,38,38,38,37,38,38,38,37,37,37,37,37,37,37,37,37,37,37,37,38,38}};
	
int parse_table2[17][30] = {{1,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,39},{39,40,40,40,2,39,39,39,39,40,40,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,39,39,39},{3,40,40,40,40,4,3,3,3,40,40,3,3,40,40,40,40,40,40,40,40,40,40,40,40,40,40,3,3,40},{5,40,40,40,40,39,5,5,5,40,40,6,8,40,40,40,40,40,40,40,40,40,40,40,40,40,40,7,7,40},{9,40,40,40,40,39,10,11,12,40,40,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,39,39,40},{39,40,40,40,40,39,39,39,39,13,40,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,39,39,40},{14,40,40,40,40,40,14,40,40,40,15,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,14,40,40,40},{39,40,40,40,40,39,39,39,39,40,40,16,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,39,39,40},{39,40,40,40,40,39,39,39,39,40,40,39,17,40,40,40,40,40,40,40,40,40,40,40,40,40,40,39,39,40},{19,40,40,40,40,19,19,19,19,40,40,19,19,18,40,40,40,40,40,40,40,40,40,40,40,40,40,19,19,40},{20,40,40,39,40,40,20,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,20,40,40,40},{39,40,40,40,40,39,39,39,39,40,40,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,21,21,40},{40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,22,23,24,25,26,40,40,40,40,40,40,40,39,39,40},{39,40,40,40,40,40,39,40,40,40,40,40,40,40,40,40,40,40,40,40,27,28,29,30,31,32,39,40,40,40},{33,40,40,39,40,40,33,40,40,40,39,40,40,40,40,40,40,40,40,40,39,39,39,39,39,39,34,40,40,40},{35,40,40,39,40,40,36,40,40,40,39,40,40,40,40,40,40,40,40,40,39,39,39,39,39,39,40,40,40,40},{40,40,40,40,40,40,40,40,40,40,39,40,40,40,39,39,39,39,39,39,40,40,40,40,40,40,40,37,38,40}};
	
	
	//for(int i = 0;i<15;++i)
	//{
	//	for(int j = 0;j<27;++j)
	//		parse_table[i][j] = parse_table2[i][j];
	//}
	for(int i = 0;i<17;++i)
	{
		for(int j = 0;j<30;++j)
			parse_table[i][j] = parse_table2[i][j];
	}
}

//Function to apply order to terminals and non terminals for easy access
void populate_tntorder()
{
	//string terminals[] = {"int","main","(",")","{","}","id",";","float","string","=","stringlit","if","else","while","!","<",">","~","+","-","/","%","*","intlit","floatlit","$"};
	//for(int i = 0;i<27;++i)
	//{
//		t_order[terminals[i]] = i;
//	}
//	string nonterminals[] = {"P","stmts","stmt","decstmt","strl","assnstmt","ifstmt","elsestmt","loopstmt","condstmt","condop","exp","expop","term","condstmt'"};
//	for(int i = 0;i<15;++i)
//	{
//		nt_order[nonterminals[i]] = i;
//	}


	string terminals[] = {"int","main","(",")","{","}","float","char","string","id",";","while","if","else","=","+","-","*","/","%",">",">=","==","<=","<","!=","stringliteral","int'","float'","$"};
	
	for(int i = 0;i<30;++i)
	{
		t_order[terminals[i]] = i;
	}
	string nonterminals[] = {"S","K","P","stmt","declaration","equation","X","whilestmt","conditional","els","condition","opeartion","op","doop","value","number","value2"};
	for(int i = 0;i<17;++i)
	{
		nt_order[nonterminals[i]] = i;
	}










}
//retrieve tokens from file
void get_tokens(string filename)
{
	cout<<"HERE\n";
	string bf;
	ifstream f(filename+".txt");
	while(getline(f,bf))
	{
		//getline(f,bf2);
		cout<<bf<<endl;
		tokens.push_back(token(bf));
	}
	f.close();
	tokens.push_back(token("$"));
}
//Given a rule, find the set of non terminals on the RHS
vector <string> findnts(string rule)
{
	int i = 0;
	while(rule.at(i)!='>') ++i;
	i+=2;
	vector<string> result;
	string temp;
	while(i<rule.length())
	{
		if(rule[i]==' ')
		{
			result.push_back(temp);
			temp = "";
		}
		else
		{
			temp+=rule[i];
		}
		++i;
	}
	if(temp.length()>0) result.push_back(temp);
	return result;
}
//Function to output stack and tokens
void outputfun(stack <string> stk,int ptr)
{
	cout<<"TOKENS\n";
	for(int i = ptr;i<tokens.size();++i)
	{
	  	cout<<tokens[i].type<<" ";
	}
	cout<<endl;
	cout<<"STACK\n";
	stack <string> temp = stk;
	while(!temp.empty())
	{
		cout<<temp.top()<<" ";
		temp.pop();
	}
	cout<<endl<<endl;
}
//LL parser
void parser()
{
	stack <string> stk;
	stk.push("$");
	stk.push("S");
	int ptr = 0;
	int i = 0;
	while(ptr < tokens.size())
	{
		outputfun(stk,ptr);
		if(tokens[ptr].type == stk.top())
		{
			++ptr;
			stk.pop();
		}
		else
		{
			if(t_order.find(stk.top())!=t_order.end() && t_order.find(tokens[ptr].type)!=t_order.end())
			{
				cout<<"TOO MANY ERRORS\n";
				return;
			}
			//int y_coord = tokens[ptr].id;
			//int x_coord = nt_order[stk.top()];
			int rulenum = parse_table[nt_order[stk.top()]][t_order[tokens[ptr].type]];
			if(rulenum==40)
			{
				cout<<"ERROR, SKIP\n";
				ptr++; 
			}
			else if(rulenum==39)
			{
				cout<<"ERROR, POP\n";
				stk.pop();
			}
			else
			{
				//cout<<"TOKEN "<<tokens[ptr].type<<endl;
				//cout<<"STACK TOP "<<stk.top()<<endl;
				//cout<<"RULE NUM "<<rulenum<<endl;
				string rl = rules[rulenum];
				vector<string> rhs = findnts(rl);
				stk.pop();
				for(int i = rhs.size()-1;i>=0;--i)
				{
					if(rhs[i]!="EPSILON") stk.push(rhs[i]);
				}
			}
		}
	}
	outputfun(stk,ptr);
	if(stk.empty())
	{
		cout<<"\nACCEPTED\n";
	}
}
int main()
{
	populate_rules();
	populate_table();
	populate_tntorder();

	string filename;
	cout<<"ENTER FILENAME (WITHOUT .txt) \n";
	cin>>filename; 

	get_tokens(filename);

	parser();
	return 0;
}



/*
S -> int main ( ) K
K -> { P } 
P -> stmt P
P -> EPSILON 
stmt -> declaration ;
stmt -> whilestmt
stmt -> operation;
stmt -> conditional 
declaration -> int equation
declaration -> float equation
declaration -> char equation
declaration -> string equation
equation -> id X
X -> value
X -> EPSILON
whilestmt -> while ( condition ) K
conditional -> if ( condition ) K els
els -> else K
els -> EPSILON
condition -> value doop value
operation -> value = value op value
op -> +
op -> -
op -> *
op -> /
op -> %
doop -> >
doop -> >=
doop -> ==
doop -> <=
doop -> <
doop -> != 
value -> number
value -> stringliteral
number -> int
number -> float
*/